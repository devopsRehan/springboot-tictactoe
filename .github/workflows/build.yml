name: Java CI Pipeline

on:
  workflow_dispatch:
  push:
    branches:
      - master

permissions:
  contents: read

env:
  JAVA_VERSION: '17'
  JAVA_DISTRIBUTION: 'temurin'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: ${{ env.JAVA_DISTRIBUTION }}
          java-version: ${{ env.JAVA_VERSION }}
          cache: maven

      - name: Build Application with Maven (Capture Logs)
        id: build_app
        run: |
          set +e
          echo "Running mvn clean package..."
          mvn clean package --batch-mode --no-transfer-progress > build_output.log 2>&1
          BUILD_STATUS=$?

          echo "::group::Maven Output (last 30 lines)"
          tail -n 30 build_output.log || echo "No output file"
          echo "::endgroup::"

          if [ $BUILD_STATUS -ne 0 ]; then
            echo "Build failed, capturing last 100 lines for Slack..."
            tail -n 100 build_output.log | tr '\n' ' ' | sed 's/"/\\"/g' > error.log
            ERROR_MSG=$(cat error.log)
            echo "error_message=$ERROR_MSG" >> "$GITHUB_OUTPUT"
          fi

          exit $BUILD_STATUS
        shell: bash

      - name: Show Captured Error Message Output
        if: failure()
        run: |
          echo "Captured Error Output:"
          echo "${{ steps.build_app.outputs.error_message }}"

      - name: Slack Notification - Build Failed with Buttons and Logs
        if: failure()
        run: |
          # Compose and send Slack message with buttons and logs
          curl -X POST https://slack.com/api/chat.postMessage \
            -H "Authorization: Bearer ${{ secrets.SLACK_BOT_TOKEN }}" \
            -H "Content-type: application/json" \
            --data "$(jq -n \
              --arg channel "#build-notifications" \
              --arg repo "${{ github.repository }}" \
              --arg sha "${{ github.sha }}" \
              --arg run_url "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}" \
              --arg actor "${{ github.actor }}" \
              --arg error "${{ steps.build_app.outputs.error_message || "No error log captured." }}" \
              '{
                channel: $channel,
                text: "*❌ Maven Build Failed for \($repo)*",
                blocks: [
                  {
                    type: "section",
                    text: {
                      type: "mrkdwn",
                      text: "*❌ Maven Build Failed for \($repo)*\n*Commit:* `\($sha)` by \($actor)\n*Run:* <\($run_url)|View in GitHub>"
                    }
                  },
                  {
                    type: "section",
                    text: {
                      type: "mrkdwn",
                      text: "*Error Log:*\n```" + $error + "```"
                    }
                  },
                  {
                    type: "actions",
                    elements: [
                      {
                        type: "button",
                        text: {
                          type: "plain_text",
                          text: "Explain"
                        },
                        value: "explain",
                        action_id: "explain"
                      },
                      {
                        type: "button",
                        text: {
                          type: "plain_text",
                          text: "Fix"
                        },
                        value: "fix",
                        action_id: "fix"
                      },
                      {
                        type: "button",
                        text: {
                          type: "plain_text",
                          text: "Re-run"
                        },
                        value: "rerun",
                        action_id: "rerun"
                      }
                    ]
                  }
                ]
              }')"
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}

      - name: Slack Notification - Build Succeeded
        if: success()
        uses: slackapi/slack-github-action@v1.26.0
        with:
          payload: |
            {
              "text": ":white_check_mark: *Maven Build Succeeded* for *${{ github.repository }}* :rocket:\n*Commit:* `${{ github.sha }}`\n*Author:* ${{ github.actor }}\n*Run:* ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}

      - name: Upload Full Build Log
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: build-log
          path: build_output.log
